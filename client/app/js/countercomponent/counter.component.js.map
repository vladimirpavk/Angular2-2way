{"version":3,"sources":["countercomponent/counter.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;YAaA;gBAAA;oBAEW,mBAAc,GAAC,IAAI,mBAAY,EAAE,CAAC;gBAuC7C,CAAC;gBApCG,IAAW,OAAO,CAAC,KAAK;oBACpB,IAAI,CAAC,YAAY,GAAC,KAAK,CAAC;oBACxB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;wBACrB,YAAY,EAAE,KAAK;qBACtB,CAAC,CAAC;gBACP,CAAC;gBACD,IAAW,OAAO;oBACd,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC7B,CAAC;gBAED,YAAY;gBACZ,CAAC;gBAED,QAAQ;oBACJ,sBAAsB;gBAC1B,CAAC;gBAEM,SAAS;oBACZ,IAAI,CAAC,YAAY,EAAE,CAAC;oBAEnB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;wBACtB,YAAY,EAAE,IAAI,CAAC,YAAY;qBAClC,CAAC,CAAC;gBACP,CAAC;gBAEM,SAAS;oBACZ,EAAE,CAAA,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,CAAA,CAAC;wBAEvB,IAAI,CAAC,YAAY,EAAE,CAAC;wBACpB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;4BACrB,YAAY,EAAE,IAAI,CAAC,YAAY;yBAClC,CAAC,CAAC;oBACP,CAAC;gBACL,CAAC;YAGL,CAAC;YAlDD;gBAAC,gBAAS,CAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE;;;GAGT;oBACD,OAAO,EAAE,CAAC,gBAAgB,CAAC;oBAC3B,MAAM,EAAE,CAAC,cAAc,CAAC;iBACzB,CAAC;;gCAAA;YACF,+CAyCC,CAAA","file":"counter.component.js","sourcesContent":["/// <reference path=\"../../../../node_modules/@angular/common/index.d.ts\" />\r\nimport { Component } from '@angular/core';\r\nimport { OnInit, Output, EventEmitter, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'counter-component',\r\n  template: `<button (click)=\"increment()\">Increment</button>\r\n  <label>Counter value:{{counterValue}}</label>\r\n  <button (click)=\"decrement()\">Decrement</button>\r\n  `,\r\n  outputs: ['counterChanged'],\r\n  inputs: ['counterValue']\r\n})\r\nexport class CounterComponent implements OnInit { \r\n\r\n    public counterChanged=new EventEmitter();\r\n    public counterValue:number;\r\n\r\n    public set counter(value){\r\n        this.counterValue=value;\r\n        this.counterChanged.emit({\r\n            counterValue: value\r\n        });\r\n    }\r\n    public get counter():number{\r\n        return this.counterValue;\r\n    }\r\n\r\n    counstructor(){        \r\n    }\r\n\r\n    ngOnInit():void{\r\n        //this.counterValue=0;\r\n    }\r\n\r\n    public increment():void{\r\n        this.counterValue++;\r\n\r\n         this.counterChanged.emit({\r\n            counterValue: this.counterValue\r\n        });\r\n    }\r\n\r\n    public decrement():void{\r\n        if(this.counterValue != 0){\r\n            \r\n            this.counterValue--;        \r\n            this.counterChanged.emit({\r\n                counterValue: this.counterValue\r\n            });\r\n        }            \r\n    }\r\n\r\n\r\n}"]}